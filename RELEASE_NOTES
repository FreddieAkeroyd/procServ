V 2.1.1 05/22/2008 Ralph Lange <Ralph.Lange@bessy.de>
Enabled -Wall fo compilation.
Fixed a number of compiler warnings.

V 2.1.0 04/25/2008 Ralph Lange <Ralph.Lange@bessy.de>
Followed Emmanuels Mayssat's suggestion:
Auto-restart-mode default can be changed by commandline option.
Auto-restart-mode can be toggled online with configurable command.
Server mode (child shut down) accepts two commands: restart child or quit server.

V 2.0.0 04/22/2008 Ralph Lange <Ralph.Lange@bessy.de>
Fixed CR/LF problem (appearing with seq debugging).
Added html doc (man page style).
Added many commandline options for fine tuning:
    pid file name, log port, command to kill the child, signal to use for killing,
    limit child's core size, ignore dangerous characters, define a short name
Added second port (default: public) for read-only log connections.
Redid the server messages (start with "@@@ " to be distiguished from child messages).

R1-4 3/9/2006
Fixed double characters when the other user is typing.
More informational messages: PIDs for everything, when sigchild and sigpipe happen and more
info at sign-on.
Put in better detection and reporting in case the startup file is not usable.  Procserve will try
to print an informational message and die.

R1-3 3/2/2006
Added the logfile feature - if stdout is a file we leave it open and write messages to it.
Added better startup handling
Added start and restart time messages.
R1-0 9/11/2003
This is the first real version that works as desired.  I have added since 1.1 several
features.

The option of running as a daemon controlled by the environment variable "PROCSERV_DEBUG".

Tuned the informational printfs.

Added some interaction with telnet protocol, enough that linemode in the telnet client is
disabled. The whole telnet state machine is more complex than it needs to be but I think that
I can use it later.  There is room for adding features here.


Known problems:
I don't have the CR-LF handling from the user just right.  One of the debugging functions in
the sequencer does something incompatible and the user has to send ^j s instead of cr to get
the next line.

Users monitoring see characters flowing both ways, double echos.  The fix for this is to
have SendToAll be a litte smarter.

1.1 9/2/2003
This works.  Telnet comes up in linemode meaning that characters are echoed and held by telnet
until it gets a <CR>. The whole line is then sent.  If you type a control character you must type
<CR> to get it sent. If the control character is ^C then you get hosed.
